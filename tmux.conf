##### Prefix: use Ctrl-A instead of Ctrl-B
unbind C-b
set -g prefix C-a
bind C-a send-prefix

##### Basics
set -g mouse on                 # wheel to scroll; selection enters copy-mode
setw -g mode-keys vi            # vi-style keys in copy-mode
set -g history-limit 100000
set -g set-clipboard on         # tmux â‰¥3.2

##### Copy-mode conveniences (vi)
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel 'sh -c "cat | ( command -v pbcopy >/dev/null && pbcopy ) || ( command -v wl-copy >/dev/null && wl-copy ) || ( command -v xclip >/dev/null && xclip -selection clipboard ) || ( command -v clip.exe >/dev/null && clip.exe )"'
bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel 'sh -c "cat | ( command -v pbcopy >/dev/null && pbcopy ) || ( command -v wl-copy >/dev/null && wl-copy ) || ( command -v xclip >/dev/null && xclip -selection clipboard ) || ( command -v clip.exe >/dev/null && clip.exe )"'

bind ] paste-buffer

##### Color theme (brand)
set -g status-position bottom
set -g status-interval 5
set -g status-style "bg=#101216,fg=#e6e6e6"
set -g status-left-length 40
set -g status-right-length 120

set -g window-status-format  " #I:#W "
set -g window-status-current-format " #I:#W "
set -g window-status-style  "fg=#c0c0c0,bg=#101216"
set -g window-status-current-style "fg=#101216,bg=#407EC9,bold"

set -g pane-border-style "fg=#2a2f3a"
set -g pane-active-border-style "fg=#407EC9"
set -g message-style "bg=#407EC9,fg=#101216,bold"
set -g mode-style "bg=#407EC9,fg=#101216"

##### Branding + CPU/MEM stats
set -g status-left " #[bold]scalyz.com #[default]"
set -g status-right '#[fg=#c0c0c0]CPU: #(sh -lc '\''\
if command -v top >/dev/null 2>&1; then \
  if top -bn1 >/dev/null 2>&1; then \
    top -bn1 | awk -F"[ ,%]+" "/Cpu\\(s\\)/ {printf(\"%d\", 100-$8)}"; \
  elif top -l 1 >/dev/null 2>&1; then \
    top -l 1 | awk "/CPU usage/ {gsub(\"%\",\" \"); printf(\"%d\", 100-$7)}"; \
  else printf "NA"; fi; \
else printf "NA"; fi\
'\'' )%  |  MEM: #(sh -lc '\''\
if command -v free >/dev/null 2>&1; then \
  free -h | awk "/Mem:/ {print $3"/"$2}"; \
elif command -v vm_stat >/dev/null 2>&1; then \
  pagesz=$(vm_stat | awk "/page size of/ {print $8}"); \
  act=$(vm_stat | awk "/Pages active/ {gsub("." ,"",$3); print $3}"); \
  wire=$(vm_stat | awk "/Pages wired down/ {gsub("." ,"",$4); print $4}"); \
  spec=$(vm_stat | awk "/Pages speculative/ {gsub("." ,"",$3); print $3}"); \
  freep=$(vm_stat | awk "/Pages free/ {gsub("." ,"",$3); print $3}"); \
  used=$((act+wire+spec)); total=$((used+freep)); \
  awk -v u=$used -v t=$total -v p=$pagesz "BEGIN{printf \"%.1f/%.1fGB\", u*p/1024/1024/1024, t*p/1024/1024/1024}"; \
else \
  printf "NA"; \
fi\
'\'' )  |  %a %H:%M '

set -g aggressive-resize on
set -g renumber-windows on
set -g base-index 1
setw -g pane-base-index 1